name: Lint, Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        cache: 'pip'

    - name: Install black
      run: pip install black

    - name: Run black
      run: black --line-length --check app

  build_and_test:
    runs-on: ubuntu-22.04
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and test Docker container
      uses: docker/build-push-action@v4
      with:
        context: .
        tags: recipe-search-service:pr-${{ github.event.number }}
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Run container for testing
      run: |
        docker run --rm recipe-search-service:pr-${{ github.event.number }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build_and_test
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to DockerHub
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: my-docker-image:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no user@server << EOF
          docker pull my-docker-image:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:80 my-docker-image:latest
        EOF
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
